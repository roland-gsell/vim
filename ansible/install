apt install git
git clone https://github.com/ansible/ansible
cd ansible
git submodule update --init --recursive
pip install -r requirements.txt
source ./hacking/env-setup

which ansible

apt install lxc
lxc-create -t ubuntu -n web1        # web2, db1
# if it fails and fallback to debian repository:
# apt install ubuntu-archive-keyring
lxc-ls --fancy
lxc-start -n web1 -d                # web2, db1
lxc-attach -n web1

apt install python-minimal python-pip --no-install-recommends


# Back on Ansible Master:

# lxc stuff:
man 5 lxc.container.conf
vi /var/lib/lxc/web1/config

lxc.net.0.ipv4.address = 10.0.3.100/24 10.0.3.255
lxc.net.0.ipv4.gateway = auto
lxc.start.auto = 1
lxc.start.delay = 15
lxc.start.order = 10

# then inside the container:
vi /etc/network/interfaces
# or
vi /etc/netplan
# in case of netplan disable dhcp and add dns servers:
vi /etc/netplan/10-lxc.yaml
# or from lxc master:
vi /var/lib/lxc/servername/rootfs/etc/netplan/10-lxc.yaml
# -------------------
network:
  ethernets:
    eth0:
      dhcp4: false
      nameservers:
        addresses: [1.1.1.1,8.8.8.8]
  version: 2
# -------------------

# now log in as root and copy the ssh key to every machine
lxc-attach -n machine_name
passwd
vi /etc/ssh/sshd_config
    PermitRootLogin yes
service sshd restart
ssh-copy-id 10.0.3.100
vi /etc/ssh/sshd_config
    PermitRootLogin prohibit-password
service sshd restart

# now back to ansible:

mkdir ~/ansible
cd ~/ansible
vim ansible.cfg

[defaults]
host_key_checking = False

vim inventory

[allservers]
10.0.3.100
10.0.3.101
10.0.3.102

[web]
10.0.3.100
10.0.3.101

[database]
10.0.3.102

ansible all -i inventory -m ping
ansible web -i inventory -a "apt update"
ansible web -i inventory -a "apt -y install nginx"
ansible web -i inventory -m service -a "name=nginx state=started"
